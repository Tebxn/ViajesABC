CREATE TABLE ROLES(
ID_ROL INT NOT NULL PRIMARY KEY,
NOMBRE_ROL VARCHAR(20) NOT NULL
);

CREATE TABLE USUARIO (
ID_USUARIO INT NOT NULL PRIMARY KEY,
IDENTIFICACION INT NOT NULL,
NOMBRE VARCHAR(45) NOT NULL,
APELLIDO1 VARCHAR(45) NOT NULL,
APELLIDO2 VARCHAR(45) NOT NULL,
DIRECCION VARCHAR(100) NOT NULL,
CORREO INT NOT NULL,
FECHA_NACIMIENTO DATE,
ROL INT NOT NULL,
ESTADO INT NOT NULL,
FOREIGN KEY(ROL) REFERENCES ROLES(ID_ROL)
);

CREATE TABLE TELEFONOS_USUARIO(
TELEFONO INT NOT NULL PRIMARY KEY,
USUARIO INT NOT NULL,
FOREIGN KEY(USUARIO) REFERENCES USUARIO(ID_USUARIO)
);


CREATE TABLE CORREOS_USUARIO(
ID_CORREO INT NOT NULL PRIMARY KEY,
USUARIO INT NOT NULL,
CORREO VARCHAR(50) NOT NULL,
FOREIGN KEY(USUARIO) REFERENCES USUARIO(ID_USUARIO)
);


CREATE TABLE PROVINCIAS ( 
ID_PROVINCIA INT NOT NULL PRIMARY KEY, 
NOMBRE_PROVINCIA VARCHAR(45) NOT NULL
);


CREATE TABLE CANTONES ( 
ID_CANTON INT NOT NULL PRIMARY KEY, 
NOMBRE_CANTON VARCHAR(45) NOT NULL
);


CREATE TABLE ORIGEN(
ID_ORIGEN INT NOT NULL PRIMARY KEY,
PROVINCIA INT,
CANTON INT,
FOREIGN KEY(PROVINCIA) REFERENCES PROVINCIAS(ID_PROVINCIA),
FOREIGN KEY(CANTON) REFERENCES CANTONES(ID_CANTON)
);

CREATE TABLE DESTINO(
ID_DESTINO INT NOT NULL PRIMARY KEY,
PROVINCIA INT,
CANTON INT,
FOREIGN KEY(PROVINCIA) REFERENCES PROVINCIAS(ID_PROVINCIA),
FOREIGN KEY(CANTON) REFERENCES CANTONES(ID_CANTON)
);

CREATE TABLE TIPO_SERVICIO(
ID_TIPO INT NOT NULL PRIMARY KEY,
NOMBRE_SERVICIO VARCHAR(50) NOT NULL,
DESCRIPCION VARCHAR(100)
);

CREATE TABLE SERVICIOS(
ID_SERVICIO INT NOT NULL PRIMARY KEY,
TIPO_SERVICIO INT NOT NULL,
PRECION DECIMAL(8,1),
FOREIGN KEY(TIPO_SERVICIO) REFERENCES TIPO_SERVICIO(ID_TIPO)
);

CREATE TABLE FACTURA(
ID_FACTURA INT NOT NULL PRIMARY KEY,
CONSECUTIVO INT NOT NULL,
ID_CLIENTE INT NOT NULL
);


CREATE TABLE FACTURA_DETALLE ( 
ID_FACTURA INT NOT NULL PRIMARY KEY,
ID_CLIENTE INT NOT NULL, 
COD_SERVICIO INT NOT NULL,
COSTO_IMPUESTOS DECIMAL(10,2) NOT NULL,
SUB_TOTAL DECIMAL(10,2) NOT NULL,
TOTAL DECIMAL(10,2) NOT NULL,
FOREIGN KEY (ID_CLIENTE) REFERENCES USUARIO(ID_USUARIO),
FOREIGN KEY (COD_SERVICIO) REFERENCES SERVICIOS(ID_SERVICIO)
);




---Procedimientos almacenados
CREATE OR REPLACE PROCEDURE INICIAR_SESION(
    pe_email IN VARCHAR2,
    pe_contrasena IN VARCHAR2,
    p_consecutivo OUT NUMBER,
    p_nombre OUT VARCHAR2,
    p_estado OUT NUMBER,
    p_tipo_usuario OUT NUMBER,
    p_resultado OUT NUMBER
) AS
BEGIN
    SELECT CONSECUTIVO, NOMBRE, ESTADO, TIPO_USUARIO INTO p_consecutivo, p_nombre, p_estado, p_tipo_usuario
    FROM Usuario
    WHERE email = pe_email AND contrasena = pe_contrasena;
    
    IF SQL%FOUND AND p_estado = 1 THEN
        p_resultado := 1; -- Inicio de sesión exitoso
    ELSE
        p_resultado := 0; -- Inicio de sesión fallido
    END IF;
END;

---insert de prueba
insert into usuario(email, contrasena, estado, tipo_usuario, nombre) values ('easanrui@gmail.com', 'root', 1, 1, 'ESTEBAN ANDRES SANCHEZ RUIZ');

EXECUTE INICIAR_SESION('easanrui@gmail.com', 'root');






CREATE TABLE USUARIOS(
CONSECUTIVO NUMBER NOT NULL PRIMARY KEY, 
EMAIL VARCHAR2(70 BYTE), 
CONTRASENA VARCHAR2(50 BYTE), 
ESTADO NUMBER, 
TIPO_USUARIO NUMBER(*,0), 
NOMBRE VARCHAR2(100 BYTE));

